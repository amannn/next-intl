name: main

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, lint, and test
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      - run: pnpm install

      # Next.js caching
      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/examples/*/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}

      # Playwright
      - run: |
          PLAYWRIGHT_VERSION=$(cat pnpm-lock.yaml | grep /@playwright/test@ | sed 's/.*@\([^:]*\):.*/\1/')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Restore playwright
        id: cache-playwright-browsers
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      - if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        # Setting up playwright in one example is sufficient
        run: pnpm --filter example-app-router-playground exec playwright install --with-deps

      - run: pnpm run build
      - run: pnpm run lint
      - run: pnpm run test
      - run: pnpm run size
